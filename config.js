import xapi from 'xapi';

/*****************************/
//Import scenarios here with syntax: import * as SCE_Name from './SCE_Name';
import * as sce_standby from './sce_standby';
import * as sce_como_type1 from './sce_como_type1';
import * as sce_firealarm from './sce_firealarm';
//Add scenarios to config.scenarios below.
/****************************/




/****************************/
//Import modules below
import * as mod_autosauce from './mod_autosauce';
import * as mod_hidcameraman from './mod_hidcameraman';
/****************************/



/****************************/
//Import drivers or drivers libraries below
import * as devicesLibrary from './devicesLibrary';
import * as driversLibrary from './driversLibrary';
/****************************/






const DEBUGLEVEL = {
  LOW: 3,
  MEDIUM: 2,
  HIGH: 1,
  NONE: 0
}

const DEVICETYPE = {
  CONTROLSYSTEM: 'CONTROLSYSTEM',
  DISPLAY: 'DISPLAY',
  CAMERAPRESET: 'CAMERAPRESET',
  VIDEOOUTPUT: 'VIDEOOUTPUT',
  AUDIOINPUT: 'AUDIOINPUT',
  AUDIOOUTPUT: 'AUDIOOUTPUT',
  AUDIOINPUTGROUP: 'AUDIOINPUTGROUP',
  AUDIOOUTPUTGROUP: 'AUDIOOUTPUTGROUP',
  AUDIOREPORTER: 'AUDIOREPORTER',
  SCREEN: 'SCREEN',
  LIGHT: 'LIGHT',
  LIGHTSCENE: 'LIGHTSCENE',
  SHADE: 'SHADE',
  CAMERA: 'CAMERA',
  SOFTWAREDEVICE: 'SOFTWAREDEVICE'
}


export const PRODUCT = 'PrepOS (dev)';
export const VERSION = '0.0.1';

export var config = {
  scenarios: [
    sce_standby,
    sce_como_type1,
    sce_firealarm,
  ],

  modules: [
    mod_autosauce,
    mod_hidcameraman
  ],


  firealarm_config: {
    forceSystemShutdown: false,
    lockTouchpanel: true,
    displayWebpage: true,
    webpageUrl: `http://youtube....`,
    displayFarendMessaeg: true
  },

  mod_autosauce_config: {
    boosts: [
      {
        silent: 'system.audio.presentermics',
        boost: 'system.audio.audiencemics',
        audioReporter: 'system.audioreporter.main',
        diffLevel: 10,
        silentElapsed: 300
      }
    ]
  },

  mod_hidcameraman_config: {
    setup: false,
    keys: [
      {
        key: 'KEY_F5',
        type: 'Pressed',
        action: 'presentertrack_toggle' //presentertrack_toggle, presentertrack_enable, presentertrack_disable, callpreset

      },
      {
        key: 'KEY_PAGEDOWN',
        type: 'Pressed',
        action: 'callpreset',
        preset: 'Auditoire'
      },
      {
        key: 'KEY_PAGEUP',
        type: 'Pressed',
        action: 'callpreset',
        preset: 'Pr√©sentateur'
      },
      {
        key: 'KEY_B',
        type: 'Pressed',
        action: 'callpreset',
        preset: 'Tableau'
      },
    ]
  },


  version: VERSION,
  system: {
    coldBootWait: 120,                            // Temps (secondes) qui d√©termine un "cold boot"
    debugLevel: DEBUGLEVEL.HIGH,                // Niveau de d√©bug (LOW, MEDIUM, HIGH)
    debugInternalMessages: false,                 // <true, false> Affichage des messages "xapi.Event.Messages"
    messagesPacing: 500,                          // Temps (ms) entre les messages de type "xpi.Command.Message"
    initDelay: 1000,                              // Temps (ms) avant l'initialisation du syst√®me
    newSessionDelay: 5000,                        // Temps (ms) pour l'ouverture d'une nouvelle session. Une progressbar s'affiche.
    forceStandby: true,                           // <true, false> Forcer un standby √† une heure pr√©cise, peu importe si un appel ou une pr√©sentation sont actifs
    forceStandbyTime: '04:00',                    // Heure √† laquelle le standby sera forc√©
    requiredPeripheralsCheckInterval: 30000,      // Temps (ms) entre les v√©rifications des p√©riph√©riques identifi√©s comme "requiredPeripheral"
    usePresenterTrack: true,                      // <true, false> D√©fini si PresenterTrack est utilis√©. Une autre valeur identique se trouve dans systemStatus
    forcePresenterTrackActivation: false,         // <true, false> Est-ce que l'activation du PresenterTrack est forc√©e par le syst√®me, peu importe si le sc√©nario actif le supporte ou pas
    presenterTrackConnector: 3,                   // Num√©ro du connecteur d'entr√©e sur lequel est connect√© la cam√©ra utilis√©e par le PresenterTrack
    settingsMenu: 'Locked',                       // <Locked, Unlocked> D√©termine si le panneau de param√®tre est v√©rouill√©
    disableAutoLightsWhenWidgetInteraction: true, // <true, false> D√©termine si le contr√¥le automatique de l'√©clairage est automatiquement d√©sactiv√© lorsqu'un widget de Light ou LightScene est touch√© par l'utilisateur
    systemReportApiKey: 'apq9apYKMbgagowb9yo0qPIq6zdLEMYhQM21f9ocP',                    // Cl√© d'api de "paste.ee" utilis√© pour l'envoi de rapport syst√®me
    showStatusAndPerformanceReports:false,        //Affiche le rapport de status apr√®s le boot et √† interval (pour le developement)
    onStandby: {
      setDND: false,                              // <true, false> D√©termine si le mode "ne pas d√©ranger" est activ√© lors du standby
      clearCallHistory: false,                    // <true, false> D√©termine si l'historique d'appel est supprim√© lors du standby
      enableScenario: 'standby'                   // Sc√©nario √† activer lors du standby. Le syst√®me est livr√© avec un sc√©nario conseill√© nomm√© "standby", fichier "sce_standby"
    },
    onWakeup: {
      enableScenario: 'comotype1'                 // Sc√©nario √† activer lors de la sortie du standby (wakeup).
    }
  },
  audio: {
    extra: {
      enabled: true,
      outputGroup: 'system.audio.extra.output',
      inputGroup: 'system.audio.extra.inputs',
      setGainZero: ['system.audio.presentermics'], //Utilisez ceci pour mettre le gain √† OFF des microphones dans chacun de ces groupes.
      setStatusOff: ['AudienceMics'], //Utilisez ceci pour mettre un status √† 'off', comme "AudienceMics"
      overVolume: 75
    }
  },
  strings: {
    systemStartingColdBootTitle: 'D√©marrage', //Titre du message quand le syst√®me vient d'allumer (Cold boot)
    systemStartingColdBootText: 'Le syst√®me vient de d√©marrer. Optimisation en cours...', //Texte du message quand le syst√®me vient d'allumer (Cold boot)
    systemStartingTitle: 'D√©marrage du syst√®me', //Titre du message quand les macros viennent de d√©marrer (Warm boot)
    systemStartingText: 'Le syst√®me d√©marre. Un instant svp.', //Texte du message quand les macros viennent de d√©marrer (Warm boot)

    newSessionTitle: `Pr√©paration de votre session`, //Titre du message quand le syst√®me sort de veille (en dessous il y a une progressbar, d√©lais de ~2 √† ~5 secondes)

    endSessionTitle: 'Terminer la session ?', //Titre du message de confirmation de fermeture de session (S'affichage uniquement si aucun appel ni pr√©sentation)
    endSessionPresentation: 'Ceci mettra fin √† votre pr√©sentation.<br>Terminer la session ?', //Texte du message de confirmation de fermeture de session si une pr√©sentation est active
    endSessionCall: 'Ceci mettra fin aux communications.<br>Terminer la session ?', //Texte du message de confirmation de fermeture de session si un appel est connect√©
    endSessionCallPresentation: 'Ceci mettra fin √† votre pr√©sentation et aux communications.<br>Terminer la session ?', //Texte du message de confirmation de fermeture de session si une pr√©sentation est active ET qu'un appel est connect√©
    endSessionChoiceYes: 'Oui (Terminer la session)', //Texte du bouton "Oui"
    endSessionChoiceNo: 'Non (Annuler)', //Texte du bouton "Non"

    deviceMonitoringWaitForDevicesTitle: 'P√©riph√©riques', //Titre du message affich√© lors de l'attente des p√©riph√©riques (au boot)
    deviceMonitoringWaitForDevicesText: 'En attente des p√©riph√©riques: %DEVICES%', //Texte du message affich√© lors de l'attente des p√©riph√©riques (au boot),

    devicesMissingTitle: 'üö© Probl√®me du syst√®me üö©', //Titre du message d'erreur lorsqu'un p√©riph√©rique cesse de r√©pondre
    devicesMissingText: 'Contactez votre soutien technique.<br>P√©riph√©riques indisponibles:<br>', //Texte du message d'erreur lorsqu'un p√©riph√©rique cesse de r√©pondre
    devicesWaitingTitle: 'En attente des p√©riph√©riques...', //Texte du message lors de l'attente des p√©riph√©riques
    devicesAllConnectedTitle: 'D√©marrage du syst√®me', //Titre du message lorsque tous les appareils se sont connect√©s
    devicesAllConnectedText: 'Tous les p√©riph√©riques sont connect√©s. Un instant svp...', //Texte du mnessage lorsque tous les appareils se sont connect√©s

    presenterTrackLocked: 'üü¢ Cadrage automatique ACTIV√â üü¢', //Texte affich√© lorsque le PresenterTracking trouve le pr√©sentateur (affich√© quelques secondes)
    presenterTrackLost: 'üî¥ Cadrage automatique D√âSACTIV√â üî¥.<br>Revenez dans la zone de pr√©sentation pour le r√©activer.', //Texte affich√© lorsque le PresenterTrack ne trouve plus le pr√©sentateur (affich√© en continu)

    sendReportTitle: 'Rapport syst√®me', //Titre de la fonctionnalit√© d'envoi de rapport d'erreur
    sendReportText: 'Envoi du rapport en cours...', //Texte de la fonctionnalit√© d'envoi de rapport d'erreur lors de l'envoi
    sendReportSuccess: 'Envoi r√©ussi!<br>R√©f√©rence: ', //Texte de la fonctionnalit√© d'envoi de rapport d'erreur, succ√®s
    sendReportFailure: `√âchec de l'envoi.`, //Texte de la fonctionnalit√© d'envoi de rapport d'erreur, √©chec

    audioExtraHighVolumeTitle: `Volume √©lev√©`, //Titre du message d'avertissement de volume √©lev√©
    audioExtraHighVolumeText: `Il est recommand√© de d√©sactiver tous les microphones lorsque le syst√®me est utilis√© √† un volume si √©lev√©.<br>Voulez-vous d√©sactiver les microphones ?`, //texte du message d'avertissement de volume √©lev√©
    audioExtraHighVolumeYes: `Oui, d√©sactiver`, //Option "oui" pour le message d'avertissement de volume √©lev√©
    audioExtraHighVolumeNo: `Non, ne pas d√©sactiver`, //Option "non" pour le message d'avertissement de volume √©lev√©
    audioExtraNormalVolumeTitle: `Volume normal`, //Titre du message d'avertissement de volume normal
    audioExtraNormalVolumeText: `Le syst√®me est de nouveau utilis√© √† un volume normal.<br>Voulez-vous r√©activer les microphones ?`, //Texte du message d'avertissement de volume normal
    audioExtraNormalVolumeYes: `Oui, r√©activer`, //Option "oui" pour le message d'avertissement de volume normal
    audioExtraNormalVolumeNo: `Non, laisser d√©sactiv√©s` //Option "non" pour le message d'avertissement de volume normal
  },


  devices: [
    {
      id: 'system.audioreporter.main',                      //Identification unique
      type: DEVICETYPE.AUDIOREPORTER,                       //Type = 'AUDIOREPORTER'
      name: 'Internal VuMeter',                             //Nom
      device: devicesLibrary.AudioReporter,                 //Classe √† utiliser
      driver: driversLibrary.AudioReporterDriver_internal,  //Driver utilis√© par la classe (VuMeter interne)
      inputs: [1, 2, 3, 7, 8],                              //Entr√©es audio √† observer
      sampleMs: 100,                                        //Temps (ms) entre chaque observation
      start: true                                           //D√©marrage de l'observation
    },

    /* CONTROL SYSTEM */
    {
      id: 'controlsystem',                                //Identification unique
      type: DEVICETYPE.CONTROLSYSTEM,                     //Type = 'CONTROLSYSTEM'
      name: 'CTRLSYS',                                    //Nom, utilis√© par le driver pour la communication
      device: devicesLibrary.ControlSystem,               //Classe √† utiliser
      driver: driversLibrary.ControlSystemDriver_isc_h21, //Driver √† utiliser par le device
      syncRestart: true,                                  //D√©fini si le syst√®me de contr√¥le sera red√©marr√© en m√™me temps que le codec (si support√©)
      restartString: 'HW_RESTART',                        //Commande √† envoyer au syst√®me de contr√¥le pour le red√©marrage
      peripheralRequired: true,                           //D√©fini si ce device est requis pour l'utilisation du syst√®me. Sa pr√©sence est v√©rifi√©e au d√©marrage et √† interval r√©gulier
      peripheralId: 'FOC2447N5FW',                        //Num√©ro de s√©rie ou MACADDR du device (Status/Peripherals)
      heartbeatInterval: 5000                             //Interval √† laquelle le driver signalera sa pr√©sence au syst√®me de contr√¥le
    },


    /* DISPLAYS */
    {
      id: 'display.projector',                      //Identification unique
      type: DEVICETYPE.DISPLAY,                     //Type = 'DISPLAY'
      name: 'PROJ',                                 //Nom, utilis√© par le driver pour la communication
      device: devicesLibrary.Display,               //Classe √† utiliser
      driver: driversLibrary.DisplayDriver_isc_h21, //Driver √† utiliser par le device
      connector: 1,                                 //Connecteur HDMI de sortie sur le codec
      supportsPower: true,                          //D√©fini si l'affichage supporte les commandes d'alimentation (ON, OFF)
      supportsBlanking: false,                      //D√©fini si l'affichage supporte les commandes de blanking (BLANK, UNBLANK)
      supportsSource: false,                        //D√©fini si l'affichage supporte le changement de source (HDMI1, HDMI2, SDI)
      supportsUsageHours: false,                    //D√©fini si l'affichage supporte le rapport de temps d'utilisation
      defaultPower: 'off',                          //Alimentation par d√©faut lors du d√©marrage du syst√®me (ON, OFF)
      defaultBlanking: false,                       //Blanking par d√©faut lors du d√©marrage du syst√®me (BLANK, UNBLANK)
      blankBeforePowerOff: true,                    //D√©fini si l'affichage doit √™tre BLANK entre le moment o√π il re√ßoit la commande "OFF" et le moment o√π il est r√©ellement OFF (powerOffDelay)
      powerOffDelay: 6000,                          //D√©lais entre la commande OFF du syst√®me et le v√©ritable changement d'alimentation √† OFF
      usageHoursRequestInterval: 100000,            //Interval de demande du temps d'utilisation
    },
    {
      id: 'display.projector.secondary',
      type: DEVICETYPE.DISPLAY,
      name: 'PROJ2',
      device: devicesLibrary.Display,
      driver: driversLibrary.DisplayDriver_isc_h21,
      //alwaysUse: true,
      connector: 1,
      supportsPower: true,
      supportsBlanking: true,
      supportsSource: false,
      supportsUsageHours: false,
      defaultPower: 'off',
      defaultBlanking: false,
      blankBeforePowerOff: true,
      powerOffDelay: 6000,
      usageHoursRequestInterval: 100000,
    },
    {
      id: 'display.monitor',
      type: DEVICETYPE.DISPLAY,
      name: 'TV',
      device: devicesLibrary.Display,
      driver: driversLibrary.DisplayDriver_isc_h21,
      connector: 3,
      supportsPower: true,
      supportsBlanking: false,
      supportsSource: false,
      supportsUsageHours: false,
      defaultPower: 'off',
      blankBeforePowerOff: false,
      powerOffDelay: 0,
    },
    {
      id: 'display.byod',
      type: DEVICETYPE.DISPLAY,
      name: 'BYOD',
      device: devicesLibrary.Display,
      driver: driversLibrary.DisplayDriver_isc_h21,
      connector: 2,
      supportsPower: false,
      supportsBlanking: false,
      supportsSource: false,
      supportsUsageHours: false,
      defaultPower: 'on',
      blankBeforePowerOff: false,
      powerOffDelay: 0,
    },


    /* MOTORIZED SCREENS */
    {
      id: 'screen',                                 //Identification unique
      type: DEVICETYPE.SCREEN,                      //Type = 'SCREEN'
      name: 'SCREEN',                               //Nom, utilis√© par le drivwer pour la communication
      device: devicesLibrary.Screen,                //Classe √† utiliser
      driver: driversLibrary.ScreenDriver_isc_h21,  //Driver √† utiliser par le device
      defaultPosition: 'up'                         //Position par d√©faut lors du d√©marrage du syst√®me
    },
    {
      id: 'screen.secondary',
      type: DEVICETYPE.SCREEN,
      name: 'SCREEN2',
      device: devicesLibrary.Screen,
      driver: driversLibrary.ScreenDriver_gpio,
      //alwaysUse: true,
      //pin:1,
      pin1: 1,
      pin2: 2,
      defaultPosition: 'up'
    },

    /* Shades */
    {
      id: 'shades',                                 //Identification unique
      type: DEVICETYPE.SHADE,                       //Type = 'SHADE'
      name: 'SHADES-EAST',                          //Nom, utilis√© par le driver pour la communication
      device: devicesLibrary.Shade,                 //Classe √† utiliser
      driver: driversLibrary.ShadeDriver_basic_isc, //Driver √† utiliser par le device
      defaultPosition: 'up'                         //Position par d√©faut lors du d√©marrage du syst√®me
    },


    /* AUDIO INPUTS */
    {
      id: 'audioinput.presenter.sf1',                   //Identification unique
      type: DEVICETYPE.AUDIOINPUT,                      //Type = 'AUDIOINPUT'
      name: 'Micro sans-fil',                           //Nom
      device: devicesLibrary.AudioInput,                //Classe √† utiliser
      driver: driversLibrary.AudioInputDriver_codecpro, //Driver √† utiliser par le device
      connector: 7,                                     //Connecteur d'entr√©e du codec
      input: 'microphone',                              //Type d'entr√©e, microphone, hdmi, ethernet. Ethernet requiert la propri√©t√© "channel". (non test√©)
      bias: 0,                                          //Biais de niveau audio, peut √™tre positif ou n√©gatif. Utilis√© par l'analyze d'entr√©e audio
      gainLowLimit: 20,                                 //Limite basse du gain de l'entr√©e
      gainHighLimit: 70,                                //Limite sup√©rieure du gain de l'entr√©e
      defaultGain: 60,                                  //Gain par d√©faut au d√©marrage du syst√®me
      gainStep: 1,                                      //Gain ajout√© ou retir√© de la valeur actuelle lorsque les fonctionas increase() et decrease() sont appel√©es
      defaultMode: 'on',                                //Mode par d√©faut lors du d√©marrage du syst√®me
      lowGain: 60,                                      //Gain "bas" (utilis√© par les widgets de type "button group")
      mediumGain: 65,                                   //Gain "moyen" (utilis√© par les widgets de type "button group")
      highGain: 70,                                     //Gain "haut" (utilis√© par les widgets de type "button group")
      boost: 70                                         //Gain "Boost, utilis√© par le module "AutoSauce"
    },
    {
      id: 'audioinput.presenter.bat1',
      type: DEVICETYPE.AUDIOINPUT,
      name: 'Micro b√¢ton',
      device: devicesLibrary.AudioInput,
      driver: driversLibrary.AudioInputDriver_codecpro,
      connector: 8,
      input: 'microphone', //microphone, hdmi, ethernet (ethernet require the "channel" property) : Connectors supported by driver AudioInput_codecpro
      bias: 0,
      gainLowLimit: 0,
      gainHighLimit: 70,
      defaultGain: 20,
      gainStep: 1,
      defaultMode: 'on',
      lowGain: 20,
      mediumGain: 50,
      highGain: 60,
      boost: 70
    },
    {
      id: 'audioinput.ceilingmic.1',
      type: DEVICETYPE.AUDIOINPUT,
      name: 'Micro plafond 1',
      device: devicesLibrary.AudioInput,
      driver: driversLibrary.AudioInputDriver_codecpro,
      connector: 1,
      input: 'microphone', //microphone, hdmi, ethernet (ethernet require the "channel" property) : Connectors supported by driver AudioInput_codecpro
      gainLowLimit: 0,
      gainHighLimit: 70,
      defaultGain: 50,
      gainStep: 1,
      defaultMode: 'on',
      lowGain: 20,
      mediumGain: 40,
      highGain: 60,
      boost: 70
    },
    {
      id: 'audioinput.ceilingmic.2',
      type: DEVICETYPE.AUDIOINPUT,
      name: 'Micro plafond 2',
      device: devicesLibrary.AudioInput,
      driver: driversLibrary.AudioInputDriver_codecpro,
      connector: 2,
      input: 'microphone', //microphone, hdmi, ethernet (ethernet require the "channel" property) : Connectors supported by driver AudioInput_codecpro
      gainLowLimit: 0,
      gainHighLimit: 70,
      defaultGain: 50,
      gainStep: 1,
      defaultMode: 'on',
      lowGain: 20,
      mediumGain: 40,
      highGain: 60,
      boost: 70
    },
    {
      id: 'audioinput.ceilingmic.3',
      type: DEVICETYPE.AUDIOINPUT,
      name: 'Micro plafond 3',
      device: devicesLibrary.AudioInput,
      driver: driversLibrary.AudioInputDriver_codecpro,
      connector: 3,
      input: 'microphone', //microphone, hdmi, ethernet (ethernet require the "channel" property) : Connectors supported by driver AudioInput_codecpro
      gainLowLimit: 0,
      gainHighLimit: 70,
      defaultGain: 50,
      gainStep: 1,
      defaultMode: 'on',
      lowGain: 20,
      mediumGain: 40,
      highGain: 60,
      boost: 70
    },




    /* CAMERA PRESETS */
    {
      id: 'campreset.presenter',            //identification unique
      name: 'Pr√©sentateur',                 //Nom
      type: DEVICETYPE.CAMERAPRESET,        //Type = 'CAMERAPRESET'
      device: devicesLibrary.CameraPreset,  //Classe √† utiliser
      presetName: 'Pr√©sentateur'            //Nom du preset dans le codec
    },
    {
      id: 'campreset.board',
      name: 'Preset Tableau',
      type: DEVICETYPE.CAMERAPRESET,
      device: devicesLibrary.CameraPreset,
      presetName: 'Tableau'
    },
    {
      id: 'campreset.audience',
      name: 'Preset Tableau',
      type: DEVICETYPE.CAMERAPRESET,
      device: devicesLibrary.CameraPreset,
      presetName: 'Auditoire'
    },


    /* LIGHTS */
    {
      id: 'light.presenter',                      //Identification unique
      name: 'ZONE1',                              //Nom, utilis√© par le driver pour la communication
      type: DEVICETYPE.LIGHT,                     //Type = 'LIGHT'
      device: devicesLibrary.Light,               //Classe √† utiliser
      driver: driversLibrary.LightDriver_isc_h21, //Driver utilis√© par la classe
      sliderEvent: 'changed',                     //<changed, released> √âv√©nement √† utiliser pour le changement du widget "slider". l'√©v√©nement "changed" s'execute quand on glisse le widget (peut √™tre demandant pour certain syst√®mes), "released" s'execute lorsqu'on l√®ve le doigt
      supportsPower: false,                       //D√©fini si l'√©clairage supporte les commandes d'alimentation. Si false, une lumi√®re √©teinte est dim √† 0
      supportsDim: true,                          //D√©fini si l'√©clairage supporte les commandes de tamisage
      defaultPower: 'on',                         //D√©fini l'√©tat d'alimentation par d√©faut au d√©marrage du syst√®me
      defaultDim: 100                             //D√©fini le tamisage par d√©faut au d√©marrage du syst√®me
    },
    {
      id: 'light.board',
      name: 'ZONE2',
      type: DEVICETYPE.LIGHT,
      device: devicesLibrary.Light,
      driver: driversLibrary.LightDriver_isc_h21,
      sliderEvent: 'changed', //released, changed
      supportsPower: true,
      supportsDim: true,
      defaultPower: 'on',
      defaultDim: 100
    },
    {
      id: 'light.audience',
      name: 'ZONE3',
      type: DEVICETYPE.LIGHT,
      device: devicesLibrary.Light,
      driver: driversLibrary.LightDriver_isc_h21,
      sliderEvent: 'changed', //released, changed
      supportsPower: true,
      supportsDim: true,
      defaultPower: 'on',
      defaultDim: 100
    },


    /* LIGHTSCENES */
    {
      id: 'lightscene.100%',                          //Identification unique
      name: 'STANDBY',                                //Nom
      type: DEVICETYPE.LIGHTSCENE,                    //Type = 'LIGHTSCENE'
      device: devicesLibrary.LightScene,              //Classe √† utiliser
      driver: driversLibrary.LightSceneDriver_lights, //Driver utilis√© par la classe. Ce driver contr√¥le des drivers de type "Light"
      lights: [                                       //Array contenant les "Light" √† contr√¥ler et leur param√®tres
        {
          id: 'light.presenter',                      //"id" du device de type "Light"
          power: 'on',                                //Statut d'alimentation
          dim: 100                                    //Statut de tamisage
        },
        {
          id: 'light.board',
          power: 'on',
          dim: 100                                    
        },
        {
          id: 'light.audience',
          power: 'on',
          dim: 100
        }
      ]
    },
    {
      id:'lightscene.100%-2',                         //Identification unique
      name:'LIGHTSCENE_100',                        //Nom de la sc√®ne d'√©clairage √† activer (dans le syst√®me d'√©clairage)
      type: DEVICETYPE.LIGHTSCENE,                  //Type = 'LIGHTSCENE'
      device: devicesLibrary.LightScene,            //Driver √† utiliser
      driver: driversLibrary.LightSceneDriver_isc,  //Driver utilis√© par la classe
    },
    {
      id: 'lightscene.50%',
      name: 'IDLE',
      type: DEVICETYPE.LIGHTSCENE,
      device: devicesLibrary.LightScene,
      driver: driversLibrary.LightSceneDriver_lights,
      lights: [
        {
          id: 'light.presenter',
          dim: 50
        },
        {
          id: 'light.board',
          power: 'on',
          dim: 50
        },
        {
          id: 'light.audience',
          power: 'on',
          dim: 50
        }
      ]
    },
    {
      id: 'lightscene.75%',
      name: 'IDLE',
      type: DEVICETYPE.LIGHTSCENE,
      device: devicesLibrary.LightScene,
      driver: driversLibrary.LightSceneDriver_lights,
      lights: [
        {
          id: 'light.presenter',
          dim: 75
        },
        {
          id: 'light.board',
          power: 'on',
          dim: 75
        },
        {
          id: 'light.audience',
          power: 'on',
          dim: 75
        }
      ]
    },
    {
      id: 'lightscene.presentation',
      name: 'IDLE',
      type: DEVICETYPE.LIGHTSCENE,
      device: devicesLibrary.LightScene,
      driver: driversLibrary.LightSceneDriver_lights,
      lights: [
        {
          id: 'light.presenter',
          power: 'on',
          dim: 70
        },
        {
          id: 'light.board',
          power: 'on',
          dim: 0
        },
        {
          id: 'light.audience',
          power: 'on',
          dim: 100
        }
      ]
    },


    /* CAMERAS */
    {
      id: 'camera.presenter',         //Identification unique
      type: DEVICETYPE.CAMERA,        //Type = 'CAMERA'
      name: 'Cam√©ra (enseignant)',    //Nom
      device: devicesLibrary.Camera,  //Classe √† utiliser
      peripheralRequired: true,       //P√©riph√©rique requis
      peripheralId: 'FDO2515J291',    //Num√©ro de s√©rie de la cam√©ra
      connector: 1                    //Connecteur d'entr√©e sur le codec

    },
    {
      id: 'camera.audience',
      type: DEVICETYPE.CAMERA,
      name: 'Cam√©ra (auditoire)',
      device: devicesLibrary.Camera,
      peripheralRequired: true,
      peripheralId: '88:C9:E8:D1:67:95',
      connector: 3
    },


    /* AUDIO INPUT GROUPS */
    {
      id: 'aig.presentationsources',          //Identification unique
      name: 'PC',                             //Nom du groupe dans "AudioConsole"
      type: DEVICETYPE.AUDIOINPUTGROUP,       //Type = 'AUDIOINPUTGROUP'
      device: devicesLibrary.AudioInputGroup, //Classe √† utiliser
      extraGain: 10                           //Gain quand le mode "Extra" connecte ce group d'entr√©e √† un groupe de sortie
    },
    {
      id: 'aig.microphones.all',
      name: 'Microphone',
      type: DEVICETYPE.AUDIOINPUTGROUP,
      device: devicesLibrary.AudioInputGroup
    },
    {
      id: 'aig.reinforcement',
      name: 'Reinforcement',
      type: DEVICETYPE.AUDIOINPUTGROUP,
      device: devicesLibrary.AudioInputGroup,
      extraGain: 15 //Needed for "Extra"
    },


    /* AUDIO OUTPUT GROUPS */
    {
      id: 'aog.room',                         //Identification unique
      name: 'Room',                           //Nom du groupe dans "AudioConsole"
      type: DEVICETYPE.AUDIOOUTPUTGROUP,      //Type = 'AUDIOOUTPUTGROUP'
      device: devicesLibrary.AudioOutputGroup //Classe √† utiliser
    },
    {
      id: 'aog.monitor',
      name: 'Monitor',
      type: DEVICETYPE.AUDIOOUTPUTGROUP,
      device: devicesLibrary.AudioOutputGroup
    },
    {
      id: 'aog.extra',
      name: 'RoomExtra',
      type: DEVICETYPE.AUDIOOUTPUTGROUP,
      device: devicesLibrary.AudioOutputGroup
    }

  ],




  groups: [
    //Default general groups
    {
      id: 'system.presentation.main',
      devices: ['display.projector', 'screen', 'display.projector.secondary', 'screen.secondary', 'campreset.presenter', 'lightscene.presentation', 'camera.presenter', 'aog.room']
    },

    {
      id: 'system.farend.main',
      devices: ['display.monitor', 'campreset.audience', 'camera.audience', 'aog.monitor']
    },
    {
      id: 'system.byod.main',
      devices: ['display.byod']
    },

    //Audio input configuration
    {
      id: 'system.audio.allmics',
      devices: ['audioinput.presenter.sf1', 'audioinput.presenter.bat1', 'audioinput.ceilingmic.1', 'audioinput.ceilingmic.2', 'audioinput.ceilingmic.3']
    },
    {
      id: 'system.audio.presentermics',
      devices: ['audioinput.presenter.sf1', 'audioinput.presenter.bat1']
    },
    {
      id: 'system.audio.presentationsources',
      devices: ['aig.presentationsources']
    },
    {
      id: 'system.audio.audiencemics',
      devices: ['audioinput.ceilingmic.1', 'audioinput.ceilingmic.2', 'audioinput.ceilingmic.3']
    },

    //Lightscenes groups
    {
      id: 'system.lightscene.standby',
      devices: ['lightscene.100%']
    },
    {
      id: 'system.lightscene.idle',
      devices: ['lightscene.100%']
    },
    {
      id: 'system.lightscene.presentation',
      devices: ['lightscene.50%']
    },
    {
      id: 'system.lightscene.writing',
      devices: ['lightscene.75%']
    },

    //Extra groups
    {
      id: 'system.audio.extra.output',
      devices: ['aog.extra']
    },
    {
      id: 'system.audio.extra.inputs',
      devices: ['aig.presentationsources', 'aig.reinforcement']
    },

  ],

  systemStatus: {
    //System status
    Product: PRODUCT, //System, nom du produit
    Version: VERSION, //System, version du produit
    PresenterLocation: 'local', //System, <local, remote>, emplacement du pr√©sentateur
    PresenterTrackWarnings: 'on', //System, <on, off>, affichage des messages d'avertissement PresenterTrack
    UsePresenterTrack: 'on', //System, <on, off>, utilisation de PresenterTrack
    AutoDisplays: 'on', //System, <on, off>, gestion des affichages automatique (doit √™tre pris en charge dans le sc√©nario)
    AutoScreens: 'on', //System, <on, off>, gestion des toiles motoris√©es automatique (doit √™tre pris en charge dans le sc√©nario)
    AutoLights: 'on', //System, <on, off>, gestion de l'√©clairage automatique (doit √™tre pris en charge dans le sc√©nario)
    AutoCamPresets: 'on', //System, <on, off> gestion des presets de cam√©ra automatique (doit √™tre pris en charge dans le sc√©nario)
    AutoCamSelection: 'off', //System, <on, off> selection de la cam√©ra automatique (doit √™tre pris en charge dans le sc√©nario)
    AudienceMics: 'on', //System, <on, off> Utilisation des microphones de l'auditoire (doit √™tre pris en charge dans le sc√©nario)
    PresenterMics: 'on', //System, <on, off> Utilisation des microphones du pr√©sentateur (doit √™ter pris en charge dans le sc√©nario)
    PresenterDetected: false, //System, <true, false>, indique si le pr√©sentateur est d√©tect√© par le syst√®me (utilise le statut de PresenterTrack)
    ClearPresentationZone: 'off', //System, <on, off>, indique si la zone de pr√©sentateur doit √™tre d√©gag√©e (doit √™tre pris en charge dans le sc√©nario)
    test:true

    //Scenario-specific status

  },

};





